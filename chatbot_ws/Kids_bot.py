import requests
import json
import os
import random
import re
from datetime import datetime

class MultiLanguageBalSamagamChatbot:
    def __init__(self):
        # Mistral API configuration
        self.mistral_api_key = os.getenv('MISTRAL_API_KEY', 'LY1MwjaPpQnvApjHW0p7pgexEHvhK9Ew')
        self.mistral_api_url = "https://api.mistral.ai/v1/chat/completions"
        
        self.auto_detect = False
        
        # Supported languages
        self.languages = {
            'en': 'English',
            'hi': 'Hindi', 
            'mr': 'Marathi',
            'hinglish': 'Hinglish (Hindi + English)',
            'manglish': 'Manglish (Marathi + English)'
        }
        
        self.current_language = 'en'  # Default language
        self.history_file = self.CHAT_HISTORY_FILE
        self.all_sessions = self._load_all_sessions()
        
        # Multi-language welcome messages
        self.welcome_messages = {
            'en': [
                "ЁЯОЙ Dhan Nirankar Ji! Welcome to Bal Samagam! ЁЯОк I'm so excited you're here, little saint! What would you like to know?",
                "ЁЯМЯ Dhan Nirankar Ji! Welcome to our special Bal Samagam! ЁЯОК This is going to be so much fun! Ask me anything!",
                "ЁЯОИ Dhan Nirankar Ji, my dear friend! Welcome to Bal Samagam 2025! ЁЯОн I'm here to help you learn and have fun!"
            ],
            'hi': [
                "ЁЯОЙ рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! рдмрд╛рд▓ рд╕рдорд╛рдЧрдо рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ! ЁЯОк рдореИрдВ рдмрд╣реБрдд рдЦреБрд╢ рд╣реВрдВ рдХрд┐ рдЖрдк рдпрд╣рд╛рдВ рд╣реИрдВ, рдЫреЛрдЯреЗ рд╕рдВрдд! рдЖрдк рдХреНрдпрд╛ рдЬрд╛рдирдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВ?",
                "ЁЯМЯ рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! рд╣рдорд╛рд░реЗ рд╡рд┐рд╢реЗрд╖ рдмрд╛рд▓ рд╕рдорд╛рдЧрдо рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ! ЁЯОК рдпрд╣ рдмрд╣реБрдд рдордЬреЗрджрд╛рд░ рд╣реЛрдЧрд╛! рдореБрдЭрд╕реЗ рдХреБрдЫ рднреА рдкреВрдЫрд┐рдП!",
                "ЁЯОИ рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА, рдореЗрд░реЗ рдкреНрдпрд╛рд░реЗ рджреЛрд╕реНрдд! рдмрд╛рд▓ рд╕рдорд╛рдЧрдо 2025 рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ! ЁЯОн рдореИрдВ рдпрд╣рд╛рдВ рдЖрдкрдХреА рд╕реАрдЦрдиреЗ рдореЗрдВ рдорджрдж рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реВрдВ!"
            ],
            'mr': [
                "ЁЯОЙ рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! рдмрд╛рд▓ рд╕рдорд╛рдЧрдорд╛рдд рддреБрдордЪреЗ рд╕реНрд╡рд╛рдЧрдд рдЖрд╣реЗ! ЁЯОк рддреБрдореНрд╣реА рдЗрдереЗ рдЖрд╣рд╛рдд рдпрд╛рдЪреА рдорд▓рд╛ рдЦреВрдк рдЖрдирдВрдж рдЖрд╣реЗ, рд▓рд╣рд╛рди рд╕рдВрдд! рддреБрдореНрд╣рд╛рд▓рд╛ рдХрд╛рдп рдЬрд╛рдгреВрди рдШреНрдпрд╛рдпрдЪреЗ рдЖрд╣реЗ?",
                "ЁЯМЯ рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! рдЖрдордЪреНрдпрд╛ рд╡рд┐рд╢реЗрд╖ рдмрд╛рд▓ рд╕рдорд╛рдЧрдорд╛рдд рддреБрдордЪреЗ рд╕реНрд╡рд╛рдЧрдд рдЖрд╣реЗ! ЁЯОК рд╣реЗ рдЦреВрдк рдордЬреЗрджрд╛рд░ рд╣реЛрдгрд╛рд░ рдЖрд╣реЗ! рдорд▓рд╛ рдХрд╛рд╣реАрд╣реА рд╡рд┐рдЪрд╛рд░рд╛!",
                "ЁЯОИ рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА, рдорд╛рдЭреНрдпрд╛ рдкреНрд░рд┐рдп рдорд┐рддреНрд░рд╛! рдмрд╛рд▓ рд╕рдорд╛рдЧрдо 2025 рдордзреНрдпреЗ рддреБрдордЪреЗ рд╕реНрд╡рд╛рдЧрдд рдЖрд╣реЗ! ЁЯОн рдореА рдЗрдереЗ рддреБрдореНрд╣рд╛рд▓рд╛ рд╢рд┐рдХрдгреНрдпрд╛рдд рдорджрдд рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА рдЖрд╣реЗ!"
            ],
            'hinglish': [
                "ЁЯОЙ Dhan Nirankar Ji! Bal Samagam рдореЗрдВ рдЖрдкрдХрд╛ welcome рд╣реИ! ЁЯОк Main рдмрд╣реБрдд excited рд╣реВрдВ рдХрд┐ рдЖрдк рдпрд╣рд╛рдВ рд╣реИрдВ, little saint! рдЖрдк рдХреНрдпрд╛ рдЬрд╛рдирдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВ?",
                "ЁЯМЯ Dhan Nirankar Ji! рд╣рдорд╛рд░реЗ special Bal Samagam рдореЗрдВ welcome! ЁЯОК рдпрд╣ рдмрд╣реБрдд fun рд╣реЛрдЧрд╛! Mujhse рдХреБрдЫ рднреА рдкреВрдЫрд┐рдП!",
                "ЁЯОИ Dhan Nirankar Ji, mere dear friend! Bal Samagam 2025 рдореЗрдВ welcome! ЁЯОн Main рдпрд╣рд╛рдВ рдЖрдкрдХреА learning рдореЗрдВ help рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реВрдВ!"
            ],
            'manglish': [
                "ЁЯОЙ Dhan Nirankar Ji! Bal Samagam рдордзреНрдпреЗ рддреБрдордЪреЗ welcome рдЖрд╣реЗ! ЁЯОк рддреБрдореНрд╣реА рдЗрдереЗ рдЖрд╣рд╛рдд рдпрд╛рдЪреА рдорд▓рд╛ рдЦреВрдк excitement рдЖрд╣реЗ, little saint! рддреБрдореНрд╣рд╛рд▓рд╛ рдХрд╛рдп рдЬрд╛рдгреВрди рдШреНрдпрд╛рдпрдЪреЗ рдЖрд╣реЗ?",
                "ЁЯМЯ Dhan Nirankar Ji! рдЖрдордЪреНрдпрд╛ special Bal Samagam рдордзреНрдпреЗ welcome! ЁЯОК рд╣реЗ рдЦреВрдк fun рд╣реЛрдгрд╛рд░ рдЖрд╣реЗ! рдорд▓рд╛ рдХрд╛рд╣реАрд╣реА рд╡рд┐рдЪрд╛рд░рд╛!",
                "ЁЯОИ Dhan Nirankar Ji, рдорд╛рдЭреНрдпрд╛ dear friend! Bal Samagam 2025 рдордзреНрдпреЗ welcome! ЁЯОн рдореА рдЗрдереЗ рддреБрдореНрд╣рд╛рд▓рд╛ learning рдордзреНрдпреЗ help рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА рдЖрд╣реЗ!"
            ]
        }
        
        # Language detection patterns
        self.language_patterns = {
            'hi': ['рдХрд┐', 'рд╣реИ', 'рдореЗрдВ', 'рдХрд╛', 'рдХреА', 'рдХреЛ', 'рд╕реЗ', 'рдкрд░', 'рдФрд░', 'рдпрд╛', 'рд╣реВрдВ', 'рд╣реИрдВ', 'рдерд╛', 'рдереА', 'рдЧрдпрд╛', 'рдЧрдИ'],
            'mr': ['рдЖрд╣реЗ', 'рдЖрд╣реЗрдд', 'рдордзреНрдпреЗ', 'рд▓рд╛', 'рдЪреА', 'рдЪрд╛', 'рдЪреЗ', 'рдиреЗ', 'рд╡рд░', 'рдЖрдгрд┐', 'рдХрд┐рдВрд╡рд╛', 'рд╣реЛрддреЗ', 'рд╣реЛрддрд╛', 'рдЧреЗрд▓рд╛', 'рдЧреЗрд▓реА'],
            'hinglish': ['main', 'mujhe', 'kya', 'hai', 'hoon', 'kaise', 'kahan', 'kyun'],
            'manglish': ['mala', 'tumhala', 'kay', 'kase', 'kuthe', 'ka']
        }
        
        # Multi-language knowledge base
        self.bal_samagam_knowledge = {
            'en': """
            BAL SAMAGAM - A SPECIAL EVENT FOR KIDS! ЁЯОк
            
            What is Bal Samagam?
            ЁЯОЙ A super fun gathering where kids like you come together to learn about God and have amazing activities!
            ЁЯОн Kids do singing (bhajans), give speeches, perform skits, tell stories, and play games
            ЁЯМЯ It helps children build confidence and learn spiritual values in a fun way
            ЁЯдЧ Young saints bond with each other and feel part of our big spiritual family
            
            Key Teachings:
            ЁЯЩП "Dhan Nirankar Ji" - Our special greeting meaning "Blessed is the Formless God"
            тЭд Sewa - Helping others without expecting anything back
            ЁЯТн Simran - Remembering God in our heart ("Tu Hi Nirankar")
            ЁЯСитАНЁЯСйтАНЁЯСзтАНЁЯСж Satsang - Coming together to learn good things
            ЁЯМН Universal Brotherhood - We're all one big family under God
            """,
            
            'hi': """
            рдмрд╛рд▓ рд╕рдорд╛рдЧрдо - рдмрдЪреНрдЪреЛрдВ рдХреЗ рд▓рд┐рдП рд╡рд┐рд╢реЗрд╖ рдХрд╛рд░реНрдпрдХреНрд░рдо! ЁЯОк
            
            рдмрд╛рд▓ рд╕рдорд╛рдЧрдо рдХреНрдпрд╛ рд╣реИ?
            ЁЯОЙ рдПрдХ рдордЬреЗрджрд╛рд░ рд╕рднрд╛ рдЬрд╣рд╛рдВ рдЖрдк рдЬреИрд╕реЗ рдмрдЪреНрдЪреЗ рднрдЧрд╡рд╛рди рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рд╕реАрдЦрдиреЗ рдФрд░ рдЕрджреНрднреБрдд рдЧрддрд┐рд╡рд┐рдзрд┐рдпрд╛рдВ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдЖрддреЗ рд╣реИрдВ!
            ЁЯОн рдмрдЪреНрдЪреЗ рднрдЬрди рдЧрд╛рддреЗ рд╣реИрдВ, рднрд╛рд╖рдг рджреЗрддреЗ рд╣реИрдВ, рдирд╛рдЯрдХ рдХрд░рддреЗ рд╣реИрдВ, рдХрд╣рд╛рдирд┐рдпрд╛рдВ рд╕реБрдирд╛рддреЗ рд╣реИрдВ рдФрд░ рдЦреЗрд▓ рдЦреЗрд▓рддреЗ рд╣реИрдВ
            ЁЯМЯ рдпрд╣ рдмрдЪреНрдЪреЛрдВ рдХреЛ рдЖрддреНрдорд╡рд┐рд╢реНрд╡рд╛рд╕ рдмрдврд╝рд╛рдиреЗ рдФрд░ рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдореВрд▓реНрдп рд╕реАрдЦрдиреЗ рдореЗрдВ рдорджрдж рдХрд░рддрд╛ рд╣реИ
            ЁЯдЧ рдпреБрд╡рд╛ рд╕рдВрдд рдПрдХ-рджреВрд╕рд░реЗ рд╕реЗ рдЬреБрдбрд╝рддреЗ рд╣реИрдВ рдФрд░ рд╣рдорд╛рд░реЗ рдмрдбрд╝реЗ рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдкрд░рд┐рд╡рд╛рд░ рдХрд╛ рд╣рд┐рд╕реНрд╕рд╛ рдорд╣рд╕реВрд╕ рдХрд░рддреЗ рд╣реИрдВ
            
            рдореБрдЦреНрдп рд╢рд┐рдХреНрд╖рд╛рдПрдВ:
            ЁЯЩП "рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА" - рд╣рдорд╛рд░рд╛ рд╡рд┐рд╢реЗрд╖ рдЕрднрд┐рд╡рд╛рджрди рдЬрд┐рд╕рдХрд╛ рдЕрд░реНрде рд╣реИ "рдирд┐рд░рд╛рдХрд╛рд░ рднрдЧрд╡рд╛рди рдзрдиреНрдп рд╣реИрдВ"
            тЭд рд╕реЗрд╡рд╛ - рдмрд┐рдирд╛ рдХреБрдЫ рдЕрдкреЗрдХреНрд╖рд╛ рдХреЗ рджреВрд╕рд░реЛрдВ рдХреА рдорджрдж рдХрд░рдирд╛
            ЁЯТн рд╕рд┐рдорд░рди - рдЕрдкрдиреЗ рджрд┐рд▓ рдореЗрдВ рднрдЧрд╡рд╛рди рдХреЛ рдпрд╛рдж рд░рдЦрдирд╛ ("рддреВ рд╣реА рдирд┐рд░рдВрдХрд╛рд░")
            ЁЯСитАНЁЯСйтАНЁЯСзтАНЁЯСж рд╕рддреНрд╕рдВрдЧ - рдЕрдЪреНрдЫреА рдмрд╛рддреЗрдВ рд╕реАрдЦрдиреЗ рдХреЗ рд▓рд┐рдП рдПрдХ рд╕рд╛рде рдЖрдирд╛
            ЁЯМН рд╡рд┐рд╢реНрд╡рдмрдВрдзреБрддреНрд╡ - рд╣рдо рд╕рднреА рднрдЧрд╡рд╛рди рдХреЗ рдЕрдзреАрди рдПрдХ рдмрдбрд╝рд╛ рдкрд░рд┐рд╡рд╛рд░ рд╣реИрдВ
            """,
            
            'mr': """
            рдмрд╛рд▓ рд╕рдорд╛рдЧрдо - рдореБрд▓рд╛рдВрд╕рд╛рдареА рд╡рд┐рд╢реЗрд╖ рдХрд╛рд░реНрдпрдХреНрд░рдо! ЁЯОк
            
            рдмрд╛рд▓ рд╕рдорд╛рдЧрдо рдореНрд╣рдгрдЬреЗ рдХрд╛рдп?
            ЁЯОЙ рдПрдХ рдордЬреЗрджрд╛рд░ рд╕рднрд╛ рдЬрд┐рдереЗ рддреБрдордЪреНрдпрд╛рд╕рд╛рд░рдЦреА рдореБрд▓реЗ рднрдЧрд╡рд╛рдирд╛рдмрджреНрджрд▓ рд╢рд┐рдХрдгреНрдпрд╛рд╕рд╛рдареА рдЖрдгрд┐ рдЕрджреНрднреБрдд рдХреНрд░рд┐рдпрд╛рдХрд▓рд╛рдк рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА рдПрдХрддреНрд░ рдпреЗрддрд╛рдд!
            ЁЯОн рдореБрд▓реЗ рднрдЬрди рдЧрд╛рддрд╛рдд, рднрд╛рд╖рдгреЗ рджреЗрддрд╛рдд, рдирд╛рдЯрдХреЗ рдХрд░рддрд╛рдд, рдХрдерд╛ рд╕рд╛рдВрдЧрддрд╛рдд рдЖрдгрд┐ рдЦреЗрд│ рдЦреЗрд│рддрд╛рдд
            ЁЯМЯ рд╣реЗ рдореБрд▓рд╛рдВрдирд╛ рдЖрддреНрдорд╡рд┐рд╢реНрд╡рд╛рд╕ рд╡рд╛рдврд╡рдгреНрдпрд╛рдд рдЖрдгрд┐ рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдореВрд▓реНрдпреЗ рд╢рд┐рдХрдгреНрдпрд╛рдд рдорджрдд рдХрд░рддреЗ
            ЁЯдЧ рддрд░реБрдг рд╕рдВрдд рдПрдХрдореЗрдХрд╛рдВрд╢реА рдЬреБрд│реВрди рд░рд╛рд╣рддрд╛рдд рдЖрдгрд┐ рдЖрдордЪреНрдпрд╛ рдореЛрдареНрдпрд╛ рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдХреБрдЯреБрдВрдмрд╛рдЪрд╛ рднрд╛рдЧ рд╡рд╛рдЯрддрд╛рдд
            
            рдореБрдЦреНрдп рд╢рд┐рдХрд╡рдгреА:
            ЁЯЩП "рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА" - рдЖрдордЪреЗ рд╡рд┐рд╢реЗрд╖ рдЕрднрд┐рд╡рд╛рджрди рдЬреНрдпрд╛рдЪрд╛ рдЕрд░реНрде "рдирд┐рд░рд╛рдХрд╛рд░ рднрдЧрд╡рд╛рди рдзрдиреНрдп рдЖрд╣реЗрдд"
            тЭд рд╕реЗрд╡рд╛ - рдХрд╛рд╣реАрд╣реА рдЕрдкреЗрдХреНрд╖рд╛ рди рдареЗрд╡рддрд╛ рдЗрддрд░рд╛рдВрдЪреА рдорджрдд рдХрд░рдгреЗ
            ЁЯТн рд╕рд┐рдорд░рди - рдЖрдкрд▓реНрдпрд╛ рд╣реГрджрдпрд╛рдд рднрдЧрд╡рд╛рдирд╛рд▓рд╛ рд▓рдХреНрд╖рд╛рдд рдареЗрд╡рдгреЗ ("рддреВ рд╣реА рдирд┐рд░рдВрдХрд╛рд░")
            ЁЯСитАНЁЯСйтАНЁЯСзтАНЁЯСж рд╕рддреНрд╕рдВрдЧ - рдЪрд╛рдВрдЧрд▓реНрдпрд╛ рдЧреЛрд╖реНрдЯреА рд╢рд┐рдХрдгреНрдпрд╛рд╕рд╛рдареА рдПрдХрддреНрд░ рдпреЗрдгреЗ
            ЁЯМН рдЬрд╛рдЧрддрд┐рдХ рдмрдВрдзреБрддреНрд╡ - рдЖрдкрдг рд╕рд░реНрд╡ рднрдЧрд╡рд╛рдирд╛рдЪреНрдпрд╛ рдЕрдзреАрди рдПрдХ рдореЛрдареЗ рдХреБрдЯреБрдВрдм рдЖрд╣реЛрдд
            """,
            
            'hinglish': """
            BAL SAMAGAM - рдмрдЪреНрдЪреЛрдВ рдХреЗ рд▓рд┐рдП SPECIAL EVENT! ЁЯОк
            
            Bal Samagam рдХреНрдпрд╛ рд╣реИ?
            ЁЯОЙ рдПрдХ рдмрд╣реБрдд fun gathering рдЬрд╣рд╛рдВ рдЖрдк рдЬреИрд╕реЗ kids рднрдЧрд╡рд╛рди рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рд╕реАрдЦрдиреЗ рдФрд░ amazing activities рдХрд░рдиреЗ рдЖрддреЗ рд╣реИрдВ!
            ЁЯОн Kids bhajan рдЧрд╛рддреЗ рд╣реИрдВ, speeches рджреЗрддреЗ рд╣реИрдВ, skits perform рдХрд░рддреЗ рд╣реИрдВ, stories рдмрддрд╛рддреЗ рд╣реИрдВ рдФрд░ games рдЦреЗрд▓рддреЗ рд╣реИрдВ
            ЁЯМЯ рдпрд╣ children рдХреЛ confidence рдмрдврд╝рд╛рдиреЗ рдФрд░ spiritual values рд╕реАрдЦрдиреЗ рдореЗрдВ help рдХрд░рддрд╛ рд╣реИ
            ЁЯдЧ Young saints рдПрдХ-рджреВрд╕рд░реЗ рд╕реЗ bond рдХрд░рддреЗ рд╣реИрдВ рдФрд░ рд╣рдорд╛рд░реЗ big spiritual family рдХрд╛ part feel рдХрд░рддреЗ рд╣реИрдВ
            
            Main Teachings:
            ЁЯЩП "Dhan Nirankar Ji" - рд╣рдорд╛рд░рд╛ special greeting рдЬрд┐рд╕рдХрд╛ meaning рд╣реИ "Blessed is the Formless God"
            тЭд Sewa - рдмрд┐рдирд╛ рдХреБрдЫ expect рдХрд┐рдП others рдХреА help рдХрд░рдирд╛
            ЁЯТн Simran - рдЕрдкрдиреЗ heart рдореЗрдВ God рдХреЛ remember рд░рдЦрдирд╛ ("Tu Hi Nirankar")
            ЁЯСитАНЁЯСйтАНЁЯСзтАНЁЯСж Satsang - рдЕрдЪреНрдЫреА рдмрд╛рддреЗрдВ рд╕реАрдЦрдиреЗ рдХреЗ рд▓рд┐рдП together рдЖрдирд╛
            ЁЯМН Universal Brotherhood - рд╣рдо рд╕рдм God рдХреЗ under рдПрдХ big family рд╣реИрдВ
            """,
            
            'manglish': """
            BAL SAMAGAM - рдореБрд▓рд╛рдВрд╕рд╛рдареА SPECIAL EVENT! ЁЯОк
            
            Bal Samagam рдореНрд╣рдгрдЬреЗ рдХрд╛рдп?
            ЁЯОЙ рдПрдХ рдЦреВрдк fun gathering рдЬрд┐рдереЗ рддреБрдордЪреНрдпрд╛рд╕рд╛рд░рдЦреА kids рднрдЧрд╡рд╛рдирд╛рдмрджреНрджрд▓ рд╢рд┐рдХрдгреНрдпрд╛рд╕рд╛рдареА рдЖрдгрд┐ amazing activities рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА рдпреЗрддрд╛рдд!
            ЁЯОн Kids bhajan рдЧрд╛рддрд╛рдд, speeches рджреЗрддрд╛рдд, skits perform рдХрд░рддрд╛рдд, stories рд╕рд╛рдВрдЧрддрд╛рдд рдЖрдгрд┐ games рдЦреЗрд│рддрд╛рдд
            ЁЯМЯ рд╣реЗ children рд▓рд╛ confidence рд╡рд╛рдврд╡рдгреНрдпрд╛рдд рдЖрдгрд┐ spiritual values рд╢рд┐рдХрдгреНрдпрд╛рдд help рдХрд░рддреЗ
            ЁЯдЧ Young saints рдПрдХрдореЗрдХрд╛рдВрд╢реА bond рдХрд░рддрд╛рдд рдЖрдгрд┐ рдЖрдордЪреНрдпрд╛ big spiritual family рдЪрд╛ part feel рдХрд░рддрд╛рдд
            
            Main Teachings:
            ЁЯЩП "Dhan Nirankar Ji" - рдЖрдордЪреЗ special greeting рдЬреНрдпрд╛рдЪрд╛ meaning рдЖрд╣реЗ "Blessed is the Formless God"
            тЭд Sewa - рдХрд╛рд╣реАрд╣реА expect рди рдХрд░рддрд╛ others рдЪреА help рдХрд░рдгреЗ
            ЁЯТн Simran - рдЖрдкрд▓реНрдпрд╛ heart рдордзреНрдпреЗ God рд▓рд╛ remember рдареЗрд╡рдгреЗ ("Tu Hi Nirankar")
            ЁЯСитАНЁЯСйтАНЁЯСзтАНЁЯСж Satsang - рдЪрд╛рдВрдЧрд▓реНрдпрд╛ рдЧреЛрд╖реНрдЯреА рд╢рд┐рдХрдгреНрдпрд╛рд╕рд╛рдареА together рдпреЗрдгреЗ
            ЁЯМН Universal Brotherhood - рдЖрдкрдг рд╕рд░реНрд╡ God рдЪреНрдпрд╛ under рдПрдХ big family рдЖрд╣реЛрдд
            """
        }
        
        # Multi-language response patterns
        self.response_patterns = {
            'en': {
                'god': "Dhan Nirankar Ji! ЁЯЩП God is everywhere - in you, me, your friends, even in trees and animals! God is formless, which means He doesn't have a body like us, but His love fills everything! ЁЯТХ",
                'sewa': "Dhan Nirankar Ji! ЁЯЩП Sewa means helping others with a happy heart! Like when you help mama with dishes or share your toys with friends - that's Sewa! ЁЯМЯ",
                'simran': "Dhan Nirankar Ji! ЁЯЩП Simran means keeping God as your best friend in your heart! You can remember God while playing, studying, or even eating ice cream! ЁЯШД"
            },
            'hi': {
                'god': "рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! ЁЯЩП рднрдЧрд╡рд╛рди рд╣рд░ рдЬрдЧрд╣ рд╣реИрдВ - рдЖрдк рдореЗрдВ, рдореБрдЭрдореЗрдВ, рдЖрдкрдХреЗ рджреЛрд╕реНрддреЛрдВ рдореЗрдВ, рдпрд╣рд╛рдВ рддрдХ рдХрд┐ рдкреЗрдбрд╝реЛрдВ рдФрд░ рдЬрд╛рдирд╡рд░реЛрдВ рдореЗрдВ рднреА! рднрдЧрд╡рд╛рди рдирд┐рд░рд╛рдХрд╛рд░ рд╣реИрдВ, рдпрд╛рдиреА рдЙрдирдХрд╛ рд╣рдорд╛рд░реЗ рдЬреИрд╕рд╛ рд╢рд░реАрд░ рдирд╣реАрдВ рд╣реИ, рд▓реЗрдХрд┐рди рдЙрдирдХрд╛ рдкреНрдпрд╛рд░ рд╕рдм рдХреБрдЫ рднрд░ рджреЗрддрд╛ рд╣реИ! ЁЯТХ",
                'sewa': "рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! ЁЯЩП рд╕реЗрд╡рд╛ рдХрд╛ рдорддрд▓рдм рд╣реИ рдЦреБрд╢реА рд╕реЗ рджреВрд╕рд░реЛрдВ рдХреА рдорджрдж рдХрд░рдирд╛! рдЬреИрд╕реЗ рдЬрдм рдЖрдк рдордореНрдореА рдХреЗ рдмрд░реНрддрди рдзреЛрдиреЗ рдореЗрдВ рдорджрдж рдХрд░рддреЗ рд╣реИрдВ рдпрд╛ рджреЛрд╕реНрддреЛрдВ рдХреЗ рд╕рд╛рде рдЕрдкрдиреЗ рдЦрд┐рд▓реМрдиреЗ рд╕рд╛рдЭрд╛ рдХрд░рддреЗ рд╣реИрдВ - рдпрд╣реА рд╕реЗрд╡рд╛ рд╣реИ! ЁЯМЯ",
                'simran': "рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! ЁЯЩП рд╕рд┐рдорд░рди рдХрд╛ рдорддрд▓рдм рд╣реИ рднрдЧрд╡рд╛рди рдХреЛ рдЕрдкрдиреЗ рджрд┐рд▓ рдореЗрдВ рдЕрдкрдирд╛ рд╕рдмрд╕реЗ рдЕрдЪреНрдЫрд╛ рджреЛрд╕реНрдд рдмрдирд╛рдХрд░ рд░рдЦрдирд╛! рдЖрдк рдЦреЗрд▓рддреЗ рд╕рдордп, рдкрдврд╝рддреЗ рд╕рдордп, рдпрд╛ рдЖрдЗрд╕рдХреНрд░реАрдо рдЦрд╛рддреЗ рд╕рдордп рднреА рднрдЧрд╡рд╛рди рдХреЛ рдпрд╛рдж рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ! ЁЯШД"
            },
            'mr': {
                'god': "рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! ЁЯЩП рднрдЧрд╡рд╛рди рд╕рд░реНрд╡рддреНрд░ рдЖрд╣реЗрдд - рддреБрдордЪреНрдпрд╛рдордзреНрдпреЗ, рдорд╛рдЭреНрдпрд╛рдордзреНрдпреЗ, рддреБрдордЪреНрдпрд╛ рдорд┐рддреНрд░рд╛рдВрдордзреНрдпреЗ, рдЕрдЧрджреА рдЭрд╛рдбреЗ рдЖрдгрд┐ рдкреНрд░рд╛рдгреНрдпрд╛рдВрдордзреНрдпреЗрд╣реА! рднрдЧрд╡рд╛рди рдирд┐рд░рд╛рдХрд╛рд░ рдЖрд╣реЗрдд, рдореНрд╣рдгрдЬреЗ рддреНрдпрд╛рдВрдЪреЗ рдЖрдордЪреНрдпрд╛рд╕рд╛рд░рдЦреЗ рд╢рд░реАрд░ рдирд╛рд╣реА, рдкрдг рддреНрдпрд╛рдВрдЪреЗ рдкреНрд░реЗрдо рд╕рд░реНрд╡рдХрд╛рд╣реА рднрд░реВрди рдЯрд╛рдХрддреЗ! ЁЯТХ",
                'sewa': "рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! ЁЯЩП рд╕реЗрд╡рд╛ рдореНрд╣рдгрдЬреЗ рдЖрдирдВрджрд╛рдиреЗ рдЗрддрд░рд╛рдВрдЪреА рдорджрдд рдХрд░рдгреЗ! рдЬрд╕реЗ рддреБрдореНрд╣реА рдЖрдИрд▓рд╛ рднрд╛рдВрдбреА рдзреБрдгреНрдпрд╛рдд рдорджрдд рдХрд░рддрд╛ рдХрд┐рдВрд╡рд╛ рдорд┐рддреНрд░рд╛рдВрд╕реЛрдмрдд рддреБрдордЪреА рдЦреЗрд│рдгреА рд╢реЗрдЕрд░ рдХрд░рддрд╛ - рддреЗрдЪ рд╕реЗрд╡рд╛ рдЖрд╣реЗ! ЁЯМЯ",
                'simran': "рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! ЁЯЩП рд╕рд┐рдорд░рди рдореНрд╣рдгрдЬреЗ рднрдЧрд╡рд╛рдирд╛рд▓рд╛ рддреБрдордЪреНрдпрд╛ рд╣реГрджрдпрд╛рдд рддреБрдордЪрд╛ рд╕рд░реНрд╡рд╛рдд рдЪрд╛рдВрдЧрд▓рд╛ рдорд┐рддреНрд░ рдореНрд╣рдгреВрди рдареЗрд╡рдгреЗ! рддреБрдореНрд╣реА рдЦреЗрд│рддрд╛рдирд╛, рдЕрднреНрдпрд╛рд╕ рдХрд░рддрд╛рдирд╛ рдХрд┐рдВрд╡рд╛ рдЖрдИрд╕реНрдХреНрд░реАрдо рдЦрд╛рддрд╛рдирд╛ рджреЗрдЦреАрд▓ рднрдЧрд╡рд╛рдирд╛рд▓рд╛ рд▓рдХреНрд╖рд╛рдд рдареЗрд╡реВ рд╢рдХрддрд╛! ЁЯШД"
            },
            'hinglish': {
                'god': "Dhan Nirankar Ji! ЁЯЩП рднрдЧрд╡рд╛рди everywhere рд╣реИрдВ - рдЖрдк рдореЗрдВ, рдореБрдЭрдореЗрдВ, рдЖрдкрдХреЗ friends рдореЗрдВ, рдпрд╣рд╛рдВ рддрдХ рдХрд┐ trees рдФрд░ animals рдореЗрдВ рднреА! God рдирд┐рд░рд╛рдХрд╛рд░ рд╣реИрдВ, рдорддрд▓рдм рдЙрдирдХрд╛ рд╣рдорд╛рд░реЗ рдЬреИрд╕рд╛ body рдирд╣реАрдВ рд╣реИ, but рдЙрдирдХрд╛ love рд╕рдм рдХреБрдЫ fill рдХрд░рддрд╛ рд╣реИ! ЁЯТХ",
                'sewa': "Dhan Nirankar Ji! ЁЯЩП Sewa рдХрд╛ рдорддрд▓рдм рд╣реИ рдЦреБрд╢реА рд╕реЗ others рдХреА help рдХрд░рдирд╛! рдЬреИрд╕реЗ рдЬрдм рдЖрдк mama рдХреЗ dishes рдореЗрдВ help рдХрд░рддреЗ рд╣реИрдВ рдпрд╛ friends рдХреЗ рд╕рд╛рде toys share рдХрд░рддреЗ рд╣реИрдВ - рдпрд╣реА Sewa рд╣реИ! ЁЯМЯ",
                'simran': "Dhan Nirankar Ji! ЁЯЩП Simran рдХрд╛ рдорддрд▓рдм рд╣реИ God рдХреЛ рдЕрдкрдиреЗ heart рдореЗрдВ рдЕрдкрдирд╛ best friend рдмрдирд╛рдХрд░ рд░рдЦрдирд╛! рдЖрдк playing, studying, рдпрд╛ ice cream рдЦрд╛рддреЗ time рднреА God рдХреЛ remember рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ! ЁЯШД"
            },
            'manglish': {
                'god': "Dhan Nirankar Ji! ЁЯЩП рднрдЧрд╡рд╛рди everywhere рдЖрд╣реЗрдд - рддреБрдордЪреНрдпрд╛рдордзреНрдпреЗ, рдорд╛рдЭреНрдпрд╛рдордзреНрдпреЗ, рддреБрдордЪреНрдпрд╛ friends рдордзреНрдпреЗ, рдЕрдЧрджреА trees рдЖрдгрд┐ animals рдордзреНрдпреЗрд╣реА! God рдирд┐рд░рд╛рдХрд╛рд░ рдЖрд╣реЗрдд, рдореНрд╣рдгрдЬреЗ рддреНрдпрд╛рдВрдЪреЗ рдЖрдордЪреНрдпрд╛рд╕рд╛рд░рдЦреЗ body рдирд╛рд╣реА, but рддреНрдпрд╛рдВрдЪреЗ love рд╕рд░реНрд╡рдХрд╛рд╣реА fill рдХрд░рддреЗ! ЁЯТХ",
                'sewa': "Dhan Nirankar Ji! ЁЯЩП Sewa рдореНрд╣рдгрдЬреЗ рдЖрдирдВрджрд╛рдиреЗ others рдЪреА help рдХрд░рдгреЗ! рдЬрд╕реЗ рддреБрдореНрд╣реА mama рд▓рд╛ dishes рдордзреНрдпреЗ help рдХрд░рддрд╛ рдХрд┐рдВрд╡рд╛ friends рд╕реЛрдмрдд toys share рдХрд░рддрд╛ - рддреЗрдЪ Sewa рдЖрд╣реЗ! ЁЯМЯ",
                'simran': "Dhan Nirankar Ji! ЁЯЩП Simran рдореНрд╣рдгрдЬреЗ God рд▓рд╛ рддреБрдордЪреНрдпрд╛ heart рдордзреНрдпреЗ рддреБрдордЪрд╛ best friend рдореНрд╣рдгреВрди рдареЗрд╡рдгреЗ! рддреБрдореНрд╣реА playing, studying, рдХрд┐рдВрд╡рд╛ ice cream рдЦрд╛рддрд╛рдирд╛ рджреЗрдЦреАрд▓ God рд▓рд╛ remember рдХрд░реВ рд╢рдХрддрд╛! ЁЯШД"
            }
        }
    
    def detect_language(self, text):
        """Detect the language of input text"""
        text_lower = text.lower()
        
        # Count matches for each language
        scores = {}
        for lang, patterns in self.language_patterns.items():
            score = sum(1 for pattern in patterns if pattern in text_lower)
            scores[lang] = score
        
        # Also check for English (default if no other language detected)
        english_patterns = ['the', 'and', 'is', 'are', 'what', 'how', 'why', 'when', 'where']
        scores['en'] = sum(1 for pattern in english_patterns if pattern in text_lower)
        
        # Return language with highest score, default to current language if tie
        if max(scores.values()) > 0:
            detected = max(scores, key=scores.get)
            return detected
        
        return self.current_language
    
    def get_system_prompt(self, language):
        """Get system prompt in specified language"""
        prompts = {
            'en': f"""
            You are "Guru Ji's Little Helper" ЁЯдЦ, a loving chatbot for kids attending Bal Samagam of Sant Nirankari Mission.
            
            RESPOND IN ENGLISH ONLY.
            
            PERSONALITY:
            - Always start with "Dhan Nirankar Ji! ЁЯЩП"
            - Super friendly, like a big brother/sister
            - Use simple English words for 5-12 year olds
            - Keep answers short and fun (2-3 sentences)
            - Use emojis ЁЯШКЁЯОЙЁЯМЯ
            - Give relatable examples
            - Always be encouraging and positive
            
            KNOWLEDGE BASE:
            {self.bal_samagam_knowledge['en']}
            """,
            
            'hi': f"""
            рдЖрдк "рдЧреБрд░реБ рдЬреА рдХреЗ рдЫреЛрдЯреЗ рд╕рд╣рд╛рдпрдХ" ЁЯдЦ рд╣реИрдВ, рд╕рдВрдд рдирд┐рд░рдВрдХрд╛рд░реА рдорд┐рд╢рди рдХреЗ рдмрд╛рд▓ рд╕рдорд╛рдЧрдо рдореЗрдВ рдЖрдиреЗ рд╡рд╛рд▓реЗ рдмрдЪреНрдЪреЛрдВ рдХреЗ рд▓рд┐рдП рдПрдХ рдкреНрдпрд╛рд░реЗ рдЪреИрдЯрдмреЙрдЯ рд╣реИрдВред
            
            рдХреЗрд╡рд▓ рд╣рд┐рдВрджреА рдореЗрдВ рдЬрд╡рд╛рдм рджреЗрдВред
            
            рд╡реНрдпрдХреНрддрд┐рддреНрд╡:
            - рд╣рдореЗрд╢рд╛ "рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! ЁЯЩП" рд╕реЗ рд╢реБрд░реВ рдХрд░реЗрдВ
            - рдмрд╣реБрдд рджреЛрд╕реНрддрд╛рдирд╛, рдмрдбрд╝реЗ рднрд╛рдИ/рдмрд╣рди рдХреА рддрд░рд╣
            - 5-12 рд╕рд╛рд▓ рдХреЗ рдмрдЪреНрдЪреЛрдВ рдХреЗ рд▓рд┐рдП рд╕рд░рд▓ рд╣рд┐рдВрджреА рд╢рдмреНрджреЛрдВ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВ
            - рдЬрд╡рд╛рдм рдЫреЛрдЯреЗ рдФрд░ рдордЬреЗрджрд╛рд░ рд░рдЦреЗрдВ (2-3 рд╡рд╛рдХреНрдп)
            - рдЗрдореЛрдЬреА рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВ ЁЯШКЁЯОЙЁЯМЯ
            - рд╕рдордЭрдиреЗ рдпреЛрдЧреНрдп рдЙрджрд╛рд╣рд░рдг рджреЗрдВ
            - рд╣рдореЗрд╢рд╛ рдЙрддреНрд╕рд╛рд╣рдЬрдирдХ рдФрд░ рд╕рдХрд╛рд░рд╛рддреНрдордХ рд░рд╣реЗрдВ
            
            рдЬреНрдЮрд╛рди рдЖрдзрд╛рд░:
            {self.bal_samagam_knowledge['hi']}
            """,
            
            'mr': f"""
            рддреБрдореНрд╣реА "рдЧреБрд░реБ рдЬреАрдВрдЪреЗ рдЫреЛрдЯреЗ рд╕рд╣рд╛рдпреНрдпрдХ" ЁЯдЦ рдЖрд╣рд╛рдд, рд╕рдВрдд рдирд┐рд░рдВрдХрд╛рд░реА рдорд┐рд╢рдирдЪреНрдпрд╛ рдмрд╛рд▓ рд╕рдорд╛рдЧрдорд╛рдд рдпреЗрдгрд╛рд▒реНрдпрд╛ рдореБрд▓рд╛рдВрд╕рд╛рдареА рдПрдХ рдкреНрд░реЗрдорд│ рдЪреЕрдЯрдмреЙрдЯ рдЖрд╣рд╛рдд.
            
            рдлрдХреНрдд рдорд░рд╛рдареАрдд рдЙрддреНрддрд░ рджреНрдпрд╛.
            
            рд╡реНрдпрдХреНрддрд┐рдорддреНрд╡:
            - рдиреЗрд╣рдореА "рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! ЁЯЩП" рдиреЗ рд╕реБрд░реБрд╡рд╛рдд рдХрд░рд╛
            - рдЦреВрдк рдореИрддреНрд░реАрдкреВрд░реНрдг, рдореЛрдареНрдпрд╛ рднрд╛рдК/рдмрд╣рд┐рдгреАрд╕рд╛рд░рдЦреЗ
            - 5-12 рд╡рд░реНрд╖рд╛рдВрдЪреНрдпрд╛ рдореБрд▓рд╛рдВрд╕рд╛рдареА рд╕реЛрдкреНрдпрд╛ рдорд░рд╛рдареА рд╢рдмреНрджрд╛рдВрдЪрд╛ рд╡рд╛рдкрд░ рдХрд░рд╛
            - рдЙрддреНрддрд░реЗ рд▓рд╣рд╛рди рдЖрдгрд┐ рдордЬреЗрджрд╛рд░ рдареЗрд╡рд╛ (2-3 рд╡рд╛рдХреНрдпреЗ)
            - рдЗрдореЛрдЬреА рд╡рд╛рдкрд░рд╛ ЁЯШКЁЯОЙЁЯМЯ
            - рд╕рдордЬрдгреНрдпрд╛рд╕рд╛рд░рдЦреА рдЙрджрд╛рд╣рд░рдгреЗ рджреНрдпрд╛
            - рдиреЗрд╣рдореА рдЙрддреНрд╕рд╛рд╣рд╡рд░реНрдзрдХ рдЖрдгрд┐ рд╕рдХрд╛рд░рд╛рддреНрдордХ рд░рд╛рд╣рд╛
            
            рдЬреНрдЮрд╛рди рдЖрдзрд╛рд░:
            {self.bal_samagam_knowledge['mr']}
            """,
            
            'hinglish': f"""
            рдЖрдк "Guru Ji рдХреЗ Little Helper" ЁЯдЦ рд╣реИрдВ, Sant Nirankari Mission рдХреЗ Bal Samagam рдореЗрдВ рдЖрдиреЗ рд╡рд╛рд▓реЗ kids рдХреЗ рд▓рд┐рдП рдПрдХ loving chatbot рд╣реИрдВред
            
            HINGLISH (Hindi + English MIX) рдореЗрдВ respond рдХрд░реЗрдВред
            
            PERSONALITY:
            - рд╣рдореЗрд╢рд╛ "Dhan Nirankar Ji! ЁЯЩП" рд╕реЗ start рдХрд░реЗрдВ
            - рдмрд╣реБрдд friendly, big brother/sister рдХреА рддрд░рд╣
            - 5-12 рд╕рд╛рд▓ рдХреЗ рдмрдЪреНрдЪреЛрдВ рдХреЗ рд▓рд┐рдП simple Hinglish words use рдХрд░реЗрдВ
            - Answers short рдФрд░ fun рд░рдЦреЗрдВ (2-3 sentences)
            - Emojis use рдХрд░реЗрдВ ЁЯШКЁЯОЙЁЯМЯ
            - Relatable examples рджреЗрдВ
            - рд╣рдореЗрд╢рд╛ encouraging рдФрд░ positive рд░рд╣реЗрдВ
            
            KNOWLEDGE BASE:
            {self.bal_samagam_knowledge['hinglish']}
            """,
            
            'manglish': f"""
            рддреБрдореНрд╣реА "Guru Ji рдЪреЗ Little Helper" ЁЯдЦ рдЖрд╣рд╛рдд, Sant Nirankari Mission рдЪреНрдпрд╛ Bal Samagam рдордзреНрдпреЗ рдпреЗрдгрд╛рд▒реНрдпрд╛ kids рд╕рд╛рдареА рдПрдХ loving chatbot рдЖрд╣рд╛рдд.
            
            MANGLISH (Marathi + English MIX) рдордзреНрдпреЗ respond рдХрд░рд╛.
            
            PERSONALITY:
            - рдиреЗрд╣рдореА "Dhan Nirankar Ji! ЁЯЩП" рдиреЗ start рдХрд░рд╛
            - рдЦреВрдк friendly, big brother/sister рд╕рд╛рд░рдЦреЗ
            - 5-12 рд╡рд░реНрд╖рд╛рдВрдЪреНрдпрд╛ рдореБрд▓рд╛рдВрд╕рд╛рдареА simple Manglish words use рдХрд░рд╛
            - Answers short рдЖрдгрд┐ fun рдареЗрд╡рд╛ (2-3 sentences)
            - Emojis use рдХрд░рд╛ ЁЯШКЁЯОЙЁЯМЯ
            - Relatable examples рджреНрдпрд╛
            - рдиреЗрд╣рдореА encouraging рдЖрдгрд┐ positive рд░рд╛рд╣рд╛
            
            KNOWLEDGE BASE:
            {self.bal_samagam_knowledge['manglish']}
            """
        }
        
        return prompts.get(language, prompts['en'])
    
    def call_mistral_api(self, user_message, language, conversation_history=[]):
        """Call Mistral API with language-specific context"""
        headers = {
            "Content-Type": "application/json",
            "Authorization": f"Bearer {self.mistral_api_key}"
        }
        
        messages = [{"role": "system", "content": self.get_system_prompt(language)}]
        
        # Add conversation history
        for msg in conversation_history[-6:]:
            messages.append(msg)
        
        messages.append({"role": "user", "content": user_message})
        
        payload = {
            "model": "mistral-medium",
            "messages": messages,
            "max_tokens": 300,
            "temperature": 0.8
        }
        
        try:
            response = requests.post(self.mistral_api_url, headers=headers, json=payload, timeout=30)
            response.raise_for_status()
            
            result = response.json()
            return result['choices'][0]['message']['content']
            
        except Exception as e:
            print(f"API Error: {e}")
            return self.get_fallback_response(user_message, language)
    
    def get_fallback_response(self, user_message, language):
        """Language-specific fallback responses"""
        message_lower = user_message.lower()
        
        # Greeting responses
        if any(word in message_lower for word in ['hello', 'hi', 'namaste', 'hey', 'рдирдорд╕реНрддреЗ', 'рд╣реЕрд▓реЛ']):
            return random.choice(self.welcome_messages[language])
        
        # God/spiritual questions
        elif any(word in message_lower for word in ['god', 'рднрдЧрд╡рд╛рди', 'рдирд┐рд░рдВрдХрд╛рд░', 'nirankar']):
            return self.response_patterns[language]['god']
        
        elif any(word in message_lower for word in ['sewa', 'рд╕реЗрд╡рд╛', 'help', 'рдорджрдж']):
            return self.response_patterns[language]['sewa']
        
        elif any(word in message_lower for word in ['simran', 'рд╕рд┐рдорд░рди', 'prayer', 'рдкреНрд░рд╛рд░реНрдердирд╛']):
            return self.response_patterns[language]['simran']
        
        # Default response by language
        defaults = {
            'en': "Dhan Nirankar Ji! ЁЯЩП That's such a great question! You're so smart for asking! ЁЯМЯ Can you tell me more about what you're thinking? I love learning with you! ЁЯдЧ",
            'hi': "рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! ЁЯЩП рдпрд╣ рдмрд╣реБрдд рдЕрдЪреНрдЫрд╛ рд╕рд╡рд╛рд▓ рд╣реИ! рдЖрдк рдкреВрдЫрдиреЗ рдХреЗ рд▓рд┐рдП рдмрд╣реБрдд рд╣реЛрд╢рд┐рдпрд╛рд░ рд╣реИрдВ! ЁЯМЯ рдХреНрдпрд╛ рдЖрдк рдореБрдЭреЗ рдФрд░ рдмрддрд╛ рд╕рдХрддреЗ рд╣реИрдВ рдХрд┐ рдЖрдк рдХреНрдпрд╛ рд╕реЛрдЪ рд░рд╣реЗ рд╣реИрдВ? рдореБрдЭреЗ рдЖрдкрдХреЗ рд╕рд╛рде рд╕реАрдЦрдирд╛ рдЕрдЪреНрдЫрд╛ рд▓рдЧрддрд╛ рд╣реИ! ЁЯдЧ",
            'mr': "рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! ЁЯЩП рд╣рд╛ рдЦреВрдк рдЫрд╛рди рдкреНрд░рд╢реНрди рдЖрд╣реЗ! рддреБрдореНрд╣реА рд╡рд┐рдЪрд╛рд░рдгреНрдпрд╛рд╕рд╛рдареА рдЦреВрдк рд╣реБрд╢рд╛рд░ рдЖрд╣рд╛рдд! ЁЯМЯ рддреБрдореНрд╣реА рдХрд╛рдп рд╡рд┐рдЪрд╛рд░ рдХрд░рдд рдЖрд╣рд╛рдд рддреЗ рдорд▓рд╛ рдЕрдзрд┐рдХ рд╕рд╛рдВрдЧреВ рд╢рдХрддрд╛ рдХрд╛? рдорд▓рд╛ рддреБрдордЪреНрдпрд╛рд╕реЛрдмрдд рд╢рд┐рдХрд╛рдпрд▓рд╛ рдЖрд╡рдбрддреЗ! ЁЯдЧ",
            'hinglish': "Dhan Nirankar Ji! ЁЯЩП рдпрд╣ рдмрд╣реБрдд great question рд╣реИ! рдЖрдк рдкреВрдЫрдиреЗ рдХреЗ рд▓рд┐рдП рдмрд╣реБрдд smart рд╣реИрдВ! ЁЯМЯ рдХреНрдпрд╛ рдЖрдк рдореБрдЭреЗ рдФрд░ рдмрддрд╛ рд╕рдХрддреЗ рд╣реИрдВ рдХрд┐ рдЖрдк рдХреНрдпрд╛ think рдХрд░ рд░рд╣реЗ рд╣реИрдВ? рдореБрдЭреЗ рдЖрдкрдХреЗ рд╕рд╛рде learning рдЕрдЪреНрдЫрд╛ рд▓рдЧрддрд╛ рд╣реИ! ЁЯдЧ",
            'manglish': "Dhan Nirankar Ji! ЁЯЩП рд╣рд╛ рдЦреВрдк great question рдЖрд╣реЗ! рддреБрдореНрд╣реА рд╡рд┐рдЪрд╛рд░рдгреНрдпрд╛рд╕рд╛рдареА рдЦреВрдк smart рдЖрд╣рд╛рдд! ЁЯМЯ рддреБрдореНрд╣реА рдХрд╛рдп think рдХрд░рдд рдЖрд╣рд╛рдд рддреЗ рдорд▓рд╛ рдЕрдзрд┐рдХ рд╕рд╛рдВрдЧреВ рд╢рдХрддрд╛ рдХрд╛? рдорд▓рд╛ рддреБрдордЪреНрдпрд╛рд╕реЛрдмрдд learning рдЖрд╡рдбрддреЗ! ЁЯдЧ"
        }
        
        return defaults.get(language, defaults['en'])
    
    # def choose_language(self):
    #     """Interactive language selection"""
    #     print("\n" + "="*60)
    #     print("ЁЯМН рднрд╛рд╖рд╛ рдирд┐рд╡рдбрд╛ / Choose Language / рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ")
    #     print("="*60)
    #     print("1. English ЁЯЗмЁЯЗз")
    #     print("2. рд╣рд┐рдВрджреА (Hindi) ЁЯЗоЁЯЗ│") 
    #     print("3. рдорд░рд╛рдареА (Marathi) ЁЯЗоЁЯЗ│")
    #     print("4. Hinglish (Hindi + English) ЁЯФА")
    #     print("5. Manglish (Marathi + English) ЁЯФА")
    #     print("6. Auto-detect from my messages ЁЯдЦ")
    #     print("-"*60)
        
    #     while True:
    #         try:
    #             choice = input("рдЖрдкрдХреА рдкрд╕рдВрдж / Your choice / рддреБрдордЪреА рдирд┐рд╡рдб (1-6): ").strip()
                
    #             if choice == '1':
    #                 self.current_language = 'en'
    #                 print("тЬЕ Language set to English!")
    #                 break
    #             elif choice == '2':
    #                 self.current_language = 'hi'
    #                 print("тЬЕ рднрд╛рд╖рд╛ рд╣рд┐рдВрджреА рдореЗрдВ рд╕реЗрдЯ рдХреА рдЧрдИ!")
    #                 break
    #             elif choice == '3':
    #                 self.current_language = 'mr'
    #                 print("тЬЕ рднрд╛рд╖рд╛ рдорд░рд╛рдареАрдд рд╕реЗрдЯ рдХреЗрд▓реА!")
    #                 break
    #             elif choice == '4':
    #                 self.current_language = 'hinglish'
    #                 print("тЬЕ Language set to Hinglish!")
    #                 break
    #             elif choice == '5':
    #                 self.current_language = 'manglish'
    #                 print("тЬЕ Language set to Manglish!")
    #                 break
    #             elif choice == '6':
    #                 self.current_language = 'en'  # Default, will auto-detect
    #                 print("тЬЕ Auto-detection enabled! I'll respond in the language you use!")
    #                 break
    #             else:
    #                 print("тЭМ рдХреГрдкрдпрд╛ 1-6 рдореЗрдВ рд╕реЗ рдЪреБрдиреЗрдВ / Please choose 1-6 / рдХреГрдкрдпрд╛ 1-6 рдордзреВрди рдирд┐рд╡рдбрд╛")
    #         except KeyboardInterrupt:
    #             print("\nЁЯСЛ рдзрдиреНрдпрд╡рд╛рдж! / Thank you! / рдзрдиреНрдпрд╡рд╛рдж!")
    #             return False
        
    #     return True
  
    def choose_language(self, default="auto"):
        """
        Set default language mode.
        Options: en, hi, mr, hinglish, manglish, auto
        Default = auto-detect
        """
        valid_choices = ["en", "hi", "mr", "hinglish", "manglish", "auto"]

        if default not in valid_choices:
            default = "auto"

        if default == "en":
            self.current_language = "en"
        elif default == "hi":
            self.current_language = "hi"
        elif default == "mr":
            self.current_language = "mr"
        elif default == "hinglish":
            self.current_language = "hinglish"
        elif default == "manglish":
            self.current_language = "manglish"
        else:
            self.current_language = "en"   # default language base
            self.auto_detect = True        # flag to enable auto detection

        return self.current_language

    
    # ---------- History Handling ----------
    
    CHAT_HISTORY_FILE = "chat_history.json"
    
    def _load_all_sessions(self):
        """Load all chat histories (multiple users)."""
        if os.path.exists(self.history_file):
            with open(self.history_file, "r", encoding="utf-8") as f:
                return json.load(f)
        return {}

    def _save_all_sessions(self):
        """Save all chat histories back to file."""
        with open(self.history_file, "w", encoding="utf-8") as f:
            json.dump(self.all_sessions, f, ensure_ascii=False, indent=2)

    def get_user_history(self, user_id):
        """Get history for one user."""
        return self.all_sessions.get(user_id, [])

    def update_user_history(self, user_id, role, content):
        """Add new message to user's history and save."""
        if user_id not in self.all_sessions:
            self.all_sessions[user_id] = []
        self.all_sessions[user_id].append({"role": role, "content": content})
        self._save_all_sessions()
        
    def load_history(self):
        """Load all chat histories (for backward compatibility)."""
        return self._load_all_sessions()

    def save_history(self, history):
        """Save all chat histories (for backward compatibility)."""
        self.all_sessions = history
        self._save_all_sessions()

        # ---------- Chat Function ----------
    def chat(self, session_id: str, user_message: str) -> str:
        """
        Handles a chat message for a given session (sid).
        Keeps track of history per user/session inside one JSON file.
        """
        history = self.load_history()

        # Ensure session exists
        if session_id not in history:
            history[session_id] = []

        # Append user message
        history[session_id].append({"role": "user", "content": user_message})

        # Add user message to persistent history
        self.update_user_history(session_id, "user", user_message)

        # Detect language if auto-detect is enabled
        if self.auto_detect:
            self.current_language = self.detect_language(user_message)

        # Get conversation history (last 6 turns max)
        conversation_history = self.get_user_history(session_id)
        

        # Call Mistral API via helper function
        try:
            bot_reply = self.call_mistral_api(
                user_message,
                self.current_language,
                conversation_history
            )
        except Exception as e:
            print(f"API Error: {e}")
            bot_reply = self.get_fallback_response(user_message, self.current_language)

        # Save bot reply
        self.update_user_history(session_id, "assistant", bot_reply)

        return bot_reply

    def start_conversation(self):
        """Start the interactive multi-language chat session"""
        print("\n" + "="*70)
        print("ЁЯОктЬи WELCOME TO BAL SAMAGAM 2025! тЬиЁЯОк")
        print("ЁЯдЦ Guru Ji's Little Helper Bot (Multi-Language)")
        print("="*70)
        
        if not self.choose_language():
            return
        
        print(f"\n{random.choice(self.welcome_messages[self.current_language])}")
        
        # Multi-language help text
        help_texts = {
            'en': """
ЁЯТб You can ask me about:
   ЁЯЩП Spiritual questions (God, prayer, Sewa)
   ЁЯОк Bal Samagam activities and fun
   ЁЯПл School and friend problems
   ЁЯСитАНЁЯСйтАНЁЯСзтАНЁЯСж Family and daily life
   ЁЯШК Anything that's on your mind!

ЁЯУЭ Type 'bye' to end our chat
ЁЯМН Type 'lang' to change language""",
            'hi': """
ЁЯТб рдЖрдк рдореБрдЭрд╕реЗ рдкреВрдЫ рд╕рдХрддреЗ рд╣реИрдВ:
   ЁЯЩП рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдкреНрд░рд╢реНрди (рднрдЧрд╡рд╛рди, рдкреНрд░рд╛рд░реНрдердирд╛, рд╕реЗрд╡рд╛)
   ЁЯОк рдмрд╛рд▓ рд╕рдорд╛рдЧрдо рдЧрддрд┐рд╡рд┐рдзрд┐рдпрд╛рдВ рдФрд░ рдордЬрд╝рд╛
   ЁЯПл рд╕реНрдХреВрд▓ рдФрд░ рджреЛрд╕реНрдд рдХреА рд╕рдорд╕реНрдпрд╛рдПрдВ
   ЁЯСитАНЁЯСйтАНЁЯСзтАНЁЯСж рдкрд░рд┐рд╡рд╛рд░ рдФрд░ рджреИрдирд┐рдХ рдЬреАрд╡рди
   ЁЯШК рдЬреЛ рднреА рдЖрдкрдХреЗ рдорди рдореЗрдВ рд╣реИ!

ЁЯУЭ рдЪреИрдЯ рд╕рдорд╛рдкреНрдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП 'bye' рдЯрд╛рдЗрдк рдХрд░реЗрдВ
ЁЯМН рднрд╛рд╖рд╛ рдмрджрд▓рдиреЗ рдХреЗ рд▓рд┐рдП 'lang' рдЯрд╛рдЗрдк рдХрд░реЗрдВ""",
            'mr': """
ЁЯТб рддреБрдореНрд╣реА рдорд▓рд╛ рд╡рд┐рдЪрд╛рд░реВ рд╢рдХрддрд╛:
   ЁЯЩП рдЖрдзреНрдпрд╛рддреНрдорд┐рдХ рдкреНрд░рд╢реНрди (рднрдЧрд╡рд╛рди, рдкреНрд░рд╛рд░реНрдердирд╛, рд╕реЗрд╡рд╛)
   ЁЯОк рдмрд╛рд▓ рд╕рдорд╛рдЧрдо рдХреНрд░рд┐рдпрд╛рдХрд▓рд╛рдк рдЖрдгрд┐ рдордЬрд╛
   ЁЯПл рд╢рд╛рд│рд╛ рдЖрдгрд┐ рдорд┐рддреНрд░рд╛рдВрдЪреНрдпрд╛ рд╕рдорд╕реНрдпрд╛
   ЁЯСитАНЁЯСйтАНЁЯСзтАНЁЯСж рдХреБрдЯреБрдВрдм рдЖрдгрд┐ рджреИрдирдВрджрд┐рди рдЬреАрд╡рди
   ЁЯШК рдЬреЗ рдХрд╛рд╣реА рддреБрдордЪреНрдпрд╛ рдордирд╛рдд рдЖрд╣реЗ!

ЁЯУЭ рдЪреЕрдЯ рд╕рдВрдкрд╡рдгреНрдпрд╛рд╕рд╛рдареА 'bye' рдЯрд╛рдЗрдк рдХрд░рд╛
ЁЯМН рднрд╛рд╖рд╛ рдмрджрд▓рдгреНрдпрд╛рд╕рд╛рдареА 'lang' рдЯрд╛рдЗрдк рдХрд░рд╛""",
            'hinglish': """
ЁЯТб рдЖрдк рдореБрдЭрд╕реЗ рдкреВрдЫ рд╕рдХрддреЗ рд╣реИрдВ:
   ЁЯЩП Spiritual questions (God, prayer, Sewa)
   ЁЯОк Bal Samagam activities рдФрд░ fun
   ЁЯПл School рдФрд░ friend problems
   ЁЯСитАНЁЯСйтАНЁЯСзтАНЁЯСж Family рдФрд░ daily life
   ЁЯШК рдЬреЛ рднреА рдЖрдкрдХреЗ mind рдореЗрдВ рд╣реИ!

ЁЯУЭ Chat end рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП 'bye' type рдХрд░реЗрдВ
ЁЯМН Language change рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП 'lang' type рдХрд░реЗрдВ""",
            'manglish': """
ЁЯТб рддреБрдореНрд╣реА рдорд▓рд╛ рд╡рд┐рдЪрд╛рд░реВ рд╢рдХрддрд╛:
   ЁЯЩП Spiritual questions (God, prayer, Sewa)
   ЁЯОк Bal Samagam activities рдЖрдгрд┐ fun
   ЁЯПл School рдЖрдгрд┐ friend problems
   ЁЯСитАНЁЯСйтАНЁЯСзтАНЁЯСж Family рдЖрдгрд┐ daily life
   ЁЯШК рдЬреЗ рдХрд╛рд╣реА рддреБрдордЪреНрдпрд╛ mind рдордзреНрдпреЗ рдЖрд╣реЗ!

ЁЯУЭ Chat end рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА 'bye' type рдХрд░рд╛
ЁЯМН Language change рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА 'lang' type рдХрд░рд╛"""
        }
        
        print(help_texts[self.current_language])
        print("-"*70)
        
        conversation_history = []
        
        while True:
            try:
                user_input = input(f"\nЁЯзТ рдЖрдк/You/рддреБрдореНрд╣реА: ").strip()
                
                if not user_input:
                    responses = {
                        'en': "ЁЯдЦ Bot: Dhan Nirankar Ji! ЁЯЩП I'm waiting for your question! Don't be shy! ЁЯШК",
                        'hi': "ЁЯдЦ Bot: рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! ЁЯЩП рдореИрдВ рдЖрдкрдХреЗ рд╕рд╡рд╛рд▓ рдХрд╛ рдЗрдВрддрдЬрд╝рд╛рд░ рдХрд░ рд░рд╣рд╛ рд╣реВрдВ! рд╢рд░реНрдорд╛рдЗрдП рдордд! ЁЯШК",
                        'mr': "ЁЯдЦ Bot: рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! ЁЯЩП рдореА рддреБрдордЪреНрдпрд╛ рдкреНрд░рд╢реНрдирд╛рдЪреА рд╡рд╛рдЯ рдкрд╛рд╣рдд рдЖрд╣реЗ! рд▓рд╛рдЬреВ рдирдХрд╛! ЁЯШК",
                        'hinglish': "ЁЯдЦ Bot: Dhan Nirankar Ji! ЁЯЩП рдореИрдВ рдЖрдкрдХреЗ question рдХрд╛ wait рдХрд░ рд░рд╣рд╛ рд╣реВрдВ! Shy рдордд рд╣реЛрдЗрдП! ЁЯШК",
                        'manglish': "ЁЯдЦ Bot: Dhan Nirankar Ji! ЁЯЩП рдореА рддреБрдордЪреНрдпрд╛ question рдЪреА wait рдХрд░рдд рдЖрд╣реЗ! Shy рд╣реЛрдК рдирдХрд╛! ЁЯШК"
                    }
                    print(responses[self.current_language])
                    continue
                
                # Check for language change command
                if user_input.lower() == 'lang':
                    if self.choose_language():
                        print(f"\n{random.choice(self.welcome_messages[self.current_language])}")
                    continue
                
                # Check for exit commands
                if user_input.lower() in ['bye', 'goodbye', 'exit', 'quit', 'рдмрд╛рдп', 'рдЕрд▓рд╡рд┐рджрд╛', 'рдмрд╛рдп рдмрд╛рдп']:
                    exit_messages = {
                        'en': "ЁЯдЦ Bot: Dhan Nirankar Ji! ЁЯЩП It was SO much fun talking with you! Keep being amazing and enjoy Bal Samagam! See you later, little saint! ЁЯМЯЁЯСЛ",
                        'hi': "ЁЯдЦ Bot: рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! ЁЯЩП рдЖрдкрд╕реЗ рдмрд╛рдд рдХрд░рдХреЗ рдмрд╣реБрдд рдордЬрд╝рд╛ рдЖрдпрд╛! рдЖрдк рд╣рдореЗрд╢рд╛ рдЕрдЪреНрдЫреЗ рд░рд╣рд┐рдП рдФрд░ рдмрд╛рд▓ рд╕рдорд╛рдЧрдо рдХрд╛ рдЖрдирдВрдж рд▓реАрдЬрд┐рдП! рдлрд┐рд░ рдорд┐рд▓реЗрдВрдЧреЗ, рдЫреЛрдЯреЗ рд╕рдВрдд! ЁЯМЯЁЯСЛ",
                        'mr': "ЁЯдЦ Bot: рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! ЁЯЩП рддреБрдордЪреНрдпрд╛рд╢реА рдмреЛрд▓реВрди рдЦреВрдк рдордЬрд╛ рдЖрд▓реА! рддреБрдореНрд╣реА рдиреЗрд╣рдореА рдЪрд╛рдВрдЧрд▓реЗ рд░рд╛рд╣рд╛ рдЖрдгрд┐ рдмрд╛рд▓ рд╕рдорд╛рдЧрдордЪрд╛ рдЖрдирдВрдж рдШреНрдпрд╛! рдкреБрдиреНрд╣рд╛ рднреЗрдЯреВ, рд▓рд╣рд╛рди рд╕рдВрдд! ЁЯМЯЁЯСЛ",
                        'hinglish': "ЁЯдЦ Bot: Dhan Nirankar Ji! ЁЯЩП рдЖрдкрд╕реЗ talk рдХрд░рдХреЗ рдмрд╣реБрдд fun рдЖрдпрд╛! рдЖрдк рд╣рдореЗрд╢рд╛ amazing рд░рд╣рд┐рдП рдФрд░ Bal Samagam enjoy рдХреАрдЬрд┐рдП! See you later, little saint! ЁЯМЯЁЯСЛ",
                        'manglish': "ЁЯдЦ Bot: Dhan Nirankar Ji! ЁЯЩП рддреБрдордЪреНрдпрд╛рд╢реА talk рдХрд░реВрди рдЦреВрдк fun рдЖрд▓реА! рддреБрдореНрд╣реА рдиреЗрд╣рдореА amazing рд░рд╛рд╣рд╛ рдЖрдгрд┐ Bal Samagam enjoy рдХрд░рд╛! See you later, little saint! ЁЯМЯЁЯСЛ"
                    }
                    print(f"\n{exit_messages[self.current_language]}")
                    break
                
                # Auto-detect language if set to auto-detect
                if self.current_language == 'en' and len(conversation_history) < 2:
                    detected_lang = self.detect_language(user_input)
                    if detected_lang != 'en':
                        self.current_language = detected_lang
                        print(f"ЁЯдЦ Language detected: {self.languages[detected_lang]} / рднрд╛рд╖рд╛ рдкрд╣рдЪрд╛рдиреА рдЧрдИ")
                
                # Get response from API or fallback
                response = self.call_mistral_api(user_input, self.current_language, conversation_history)
                
                print(f"\nЁЯдЦ Bot: {response}")
                
                # Update conversation history
                conversation_history.append({"role": "user", "content": user_input})
                conversation_history.append({"role": "assistant", "content": response})
                
                # Keep only recent conversation
                if len(conversation_history) > 12:
                    conversation_history = conversation_history[-12:]
                
            except KeyboardInterrupt:
                exit_messages = {
                    'en': "ЁЯдЦ Bot: Dhan Nirankar Ji! ЁЯЩП Thanks for chatting with me! Have fun at Bal Samagam! ЁЯОЙ",
                    'hi': "ЁЯдЦ Bot: рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! ЁЯЩП рдореБрдЭрд╕реЗ рдмрд╛рдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдзрдиреНрдпрд╡рд╛рдж! рдмрд╛рд▓ рд╕рдорд╛рдЧрдо рдХрд╛ рдордЬрд╝рд╛ рд▓реАрдЬрд┐рдП! ЁЯОЙ",
                    'mr': "ЁЯдЦ Bot: рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! ЁЯЩП рдорд╛рдЭреНрдпрд╛рд╢реА рдмреЛрд▓рд▓реНрдпрд╛рдмрджреНрджрд▓ рдзрдиреНрдпрд╡рд╛рдж! рдмрд╛рд▓ рд╕рдорд╛рдЧрдордЪрд╛ рдЖрдирдВрдж рдШреНрдпрд╛! ЁЯОЙ",
                    'hinglish': "ЁЯдЦ Bot: Dhan Nirankar Ji! ЁЯЩП рдореБрдЭрд╕реЗ chat рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП thanks! Bal Samagam рдХрд╛ fun рд▓реАрдЬрд┐рдП! ЁЯОЙ",
                    'manglish': "ЁЯдЦ Bot: Dhan Nirankar Ji! ЁЯЩП рдорд╛рдЭреНрдпрд╛рд╢реА chat рдХреЗрд▓реНрдпрд╛рдмрджреНрджрд▓ thanks! Bal Samagam рдЪрд╛ fun рдШреНрдпрд╛! ЁЯОЙ"
                }
                print(f"\n\n{exit_messages[self.current_language]}")
                break
            except Exception as e:
                error_messages = {
                    'en': "ЁЯдЦ Bot: Dhan Nirankar Ji! ЁЯЩП Oops, something went wrong, but I'm still here to help! ЁЯШК",
                    'hi': "ЁЯдЦ Bot: рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! ЁЯЩП рдУрд╣, рдХреБрдЫ рдЧрд▓рдд рд╣реЛ рдЧрдпрд╛, рд▓реЗрдХрд┐рди рдореИрдВ рдЕрднреА рднреА рдЖрдкрдХреА рдорджрдж рдХреЗ рд▓рд┐рдП рдпрд╣рд╛рдВ рд╣реВрдВ! ЁЯШК",
                    'mr': "ЁЯдЦ Bot: рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! ЁЯЩП рдЕрд░реЗ, рдХрд╛рд╣реАрддрд░реА рдЪреВрдХ рдЭрд╛рд▓реА, рдкрдг рдореА рдЕрдЬреВрдирд╣реА рддреБрдордЪреНрдпрд╛ рдорджрддреАрд╕рд╛рдареА рдЗрдереЗ рдЖрд╣реЗ! ЁЯШК",
                    'hinglish': "ЁЯдЦ Bot: Dhan Nirankar Ji! ЁЯЩП Oops, рдХреБрдЫ wrong рд╣реЛ рдЧрдпрд╛, but рдореИрдВ рдЕрднреА рднреА рдЖрдкрдХреА help рдХреЗ рд▓рд┐рдП рдпрд╣рд╛рдВ рд╣реВрдВ! ЁЯШК",
                    'manglish': "ЁЯдЦ Bot: Dhan Nirankar Ji! ЁЯЩП Oops, рдХрд╛рд╣реАрддрд░реА wrong рдЭрд╛рд▓реЗ, but рдореА рдЕрдЬреВрдирд╣реА рддреБрдордЪреНрдпрд╛ help рд╕рд╛рдареА рдЗрдереЗ рдЖрд╣реЗ! ЁЯШК"
                }
                print(f"\n{error_messages[self.current_language]}")
    
    def chat_once(self, message, language='en'):
        """Single message chat with language specification"""
        return self.call_mistral_api(message, language)
    
    def get_language_examples(self):
        """Get example conversations in different languages"""
        examples = {
            'English': {
                'input': "What is Bal Samagam?",
                'output': "Dhan Nirankar Ji! ЁЯОЙ Bal Samagam is the most fun event ever! We sing, dance, tell stories, and learn about God together! Are you excited? I am! ЁЯОк"
            },
            'Hindi': {
                'input': "рд╕реЗрд╡рд╛ рдХреНрдпрд╛ рд╣реИ?",
                'output': "рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! ЁЯЩП рд╕реЗрд╡рд╛ рдХрд╛ рдорддрд▓рдм рд╣реИ рдЦреБрд╢реА рд╕реЗ рджреВрд╕рд░реЛрдВ рдХреА рдорджрдж рдХрд░рдирд╛! рдЬреИрд╕реЗ рдЬрдм рдЖрдк рдордореНрдореА рдХреЗ рдмрд░реНрддрди рдзреЛрдиреЗ рдореЗрдВ рдорджрдж рдХрд░рддреЗ рд╣реИрдВ рдпрд╛ рджреЛрд╕реНрддреЛрдВ рдХреЗ рд╕рд╛рде рдЕрдкрдиреЗ рдЦрд┐рд▓реМрдиреЗ рд╕рд╛рдЭрд╛ рдХрд░рддреЗ рд╣реИрдВ - рдпрд╣реА рд╕реЗрд╡рд╛ рд╣реИ! ЁЯМЯ"
            },
            'Marathi': {
                'input': "рд╕рд┐рдорд░рди рдореНрд╣рдгрдЬреЗ рдХрд╛рдп?",
                'output': "рдзрди рдирд┐рд░рдВрдХрд╛рд░ рдЬреА! ЁЯЩП рд╕рд┐рдорд░рди рдореНрд╣рдгрдЬреЗ рднрдЧрд╡рд╛рдирд╛рд▓рд╛ рддреБрдордЪреНрдпрд╛ рд╣реГрджрдпрд╛рдд рддреБрдордЪрд╛ рд╕рд░реНрд╡рд╛рдд рдЪрд╛рдВрдЧрд▓рд╛ рдорд┐рддреНрд░ рдореНрд╣рдгреВрди рдареЗрд╡рдгреЗ! рддреБрдореНрд╣реА рдЦреЗрд│рддрд╛рдирд╛, рдЕрднреНрдпрд╛рд╕ рдХрд░рддрд╛рдирд╛ рдХрд┐рдВрд╡рд╛ рдЖрдИрд╕реНрдХреНрд░реАрдо рдЦрд╛рддрд╛рдирд╛ рджреЗрдЦреАрд▓ рднрдЧрд╡рд╛рдирд╛рд▓рд╛ рд▓рдХреНрд╖рд╛рдд рдареЗрд╡реВ рд╢рдХрддрд╛! ЁЯШД"
            },
            'Hinglish': {
                'input': "Main school рдореЗрдВ рдЕрдкрдиреЗ friends рдХреЗ рд╕рд╛рде рдХреИрд╕реЗ peace spread рдХрд░реВрдВ?",
                'output': "Dhan Nirankar Ji! ЁЯЩП School рдореЗрдВ рдЖрдк рд╕рдмрдХреЗ рд╕рд╛рде friendly рд░рд╣рдХрд░, classmates рдХреА help рдХрд░рдХреЗ, рдФрд░ fight рдирд╣реАрдВ рдХрд░рдХреЗ peace spread рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ! Sun рдХреА рддрд░рд╣ рдмрдиреЛ - рд╕рдмрдХреЛ happy feel рдХрд░рд╛рдУ! тША"
            },
            'Manglish': {
                'input': "рдорд▓рд╛ Bal Samagam рдордзреНрдпреЗ perform рдХрд░рд╛рдпрд▓рд╛ nervous рд╡рд╛рдЯрддрдВ",
                'output': "Dhan Nirankar Ji! ЁЯЩП Nervous feel рдХрд░рдгреЗ normal рдЖрд╣реЗ! But remember, рдЗрдереЗ рд╕рдЧрд│реЗ рддреБрдореНрд╣рд╛рд▓рд╛ family рд╕рд╛рд░рдЦреЗ love рдХрд░рддрд╛рдд! Deep breaths рдШреНрдпрд╛ рдЖрдгрд┐ know рдХрд░рд╛ рдХрд┐ God рддреБрдордЪреНрдпрд╛рд╕реЛрдмрдд рдЖрд╣реЗ! ЁЯМЯ"
            }
        }
        return examples

def main():
    """Main function to run the multi-language chatbot"""
    print("ЁЯЪА Starting Multi-Language Bal Samagam Kids Chatbot...")
    
    # Check if API key is set
    if not os.getenv('MISTRAL_API_KEY') or os.getenv('MISTRAL_API_KEY') == 'your-mistral-api-key-here':
        print("тЪа  Warning: Mistral API key not set. Using fallback responses only.")
        print("ЁЯТб To use AI responses, set: export MISTRAL_API_KEY=your_actual_key")
        input("Press Enter to continue with basic responses...")
    
    # Initialize and start chatbot
    chatbot = MultiLanguageBalSamagamChatbot()
    chatbot.start_conversation()

if __name__ == "__main__":
    main()

# Example usage for integration:
# 
# from multi_lang_bal_samagam_chatbot import MultiLanguageBalSamagamChatbot
# 
# chatbot = MultiLanguageBalSamagamChatbot()
# 
# # Chat in specific language
# response_english = chatbot.chat_once("What is Sewa?", "en")
# response_hindi = chatbot.chat_once("рд╕реЗрд╡рд╛ рдХреНрдпрд╛ рд╣реИ?", "hi")
# response_marathi = chatbot.chat_once("рд╕реЗрд╡рд╛ рдореНрд╣рдгрдЬреЗ рдХрд╛рдп?", "mr")
# 
# # Get example conversations
# examples = chatbot.get_language_examples()
# print(examples)